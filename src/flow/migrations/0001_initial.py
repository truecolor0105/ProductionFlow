# Generated by Django 3.2 on 2023-05-10 22:10

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import flow.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('updated', models.DateTimeField(blank=True, null=True)),
                ('deleted', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Company.creator+', to=settings.AUTH_USER_MODEL)),
                ('deleter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Company.deleter+', to=settings.AUTH_USER_MODEL)),
                ('updater', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Company.updater+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '1. Company',
                'verbose_name_plural': '1. Company',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('updated', models.DateTimeField(blank=True, null=True)),
                ('deleted', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee_company', to='flow.company')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Employee.creator+', to=settings.AUTH_USER_MODEL)),
                ('deleter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Employee.deleter+', to=settings.AUTH_USER_MODEL)),
                ('updater', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Employee.updater+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='employee_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '2. Employee',
                'verbose_name_plural': '2. Employee',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=1000, null=True)),
                ('notes', models.TextField(blank=True, default='', null=True)),
                ('contacts', models.BooleanField(default=False)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('updated', models.DateTimeField(blank=True, null=True)),
                ('deleted', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_company', to='flow.company')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Project.creator+', to=settings.AUTH_USER_MODEL)),
                ('deleter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Project.deleter+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '4. Project',
                'verbose_name_plural': '4. Project',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ProjectFolder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('updated', models.DateTimeField(blank=True, null=True)),
                ('deleted', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projectfolder_company', to='flow.company')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ProjectFolder.creator+', to=settings.AUTH_USER_MODEL)),
                ('deleter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ProjectFolder.deleter+', to=settings.AUTH_USER_MODEL)),
                ('updater', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ProjectFolder.updater+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '3. Project Folder',
                'verbose_name_plural': '3. Project Folder',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('color', models.CharField(blank=True, default='', max_length=10, null=True)),
                ('notes', models.TextField(blank=True, default='', null=True)),
                ('active', models.BooleanField(default=False)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('updated', models.DateTimeField(blank=True, null=True)),
                ('deleted', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Status.creator+', to=settings.AUTH_USER_MODEL)),
                ('deleter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Status.deleter+', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_task', to='flow.project')),
                ('updater', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Status.updater+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '9. Status',
                'verbose_name_plural': '9. Status',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, default='', null=True)),
                ('email', models.TextField(blank=True, default='', null=True)),
                ('notes', models.TextField(blank=True, default='', null=True)),
                ('notes1', models.TextField(blank=True, default='', null=True)),
                ('notes2', models.TextField(blank=True, default='', null=True)),
                ('notes3', models.TextField(blank=True, default='', null=True)),
                ('notes4', models.TextField(blank=True, default='', null=True)),
                ('notes5', models.TextField(blank=True, default='', null=True)),
                ('notes6', models.TextField(blank=True, default='', null=True)),
                ('notes7', models.TextField(blank=True, default='', null=True)),
                ('notes8', models.TextField(blank=True, default='', null=True)),
                ('notes9', models.TextField(blank=True, default='', null=True)),
                ('employee', models.CharField(blank=True, default='', max_length=1000, null=True)),
                ('outreach', models.TextField(blank=True, default='', null=True)),
                ('shift', models.BooleanField(default=False)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('updated', models.DateTimeField(blank=True, null=True)),
                ('deleted', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Task.creator+', to=settings.AUTH_USER_MODEL)),
                ('deleter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Task.deleter+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '6. Task',
                'verbose_name_plural': '6. Task',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='TaskVideo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, max_length=1000, null=True, upload_to=flow.models.make_file_path)),
                ('thumbnail', models.ImageField(blank=True, max_length=1000, null=True, upload_to=flow.models.make_file_path)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('updated', models.DateTimeField(blank=True, null=True)),
                ('deleted', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='TaskVideo.creator+', to=settings.AUTH_USER_MODEL)),
                ('deleter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='TaskVideo.deleter+', to=settings.AUTH_USER_MODEL)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taskvideo_task', to='flow.task')),
                ('updater', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='TaskVideo.updater+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Video File',
                'verbose_name_plural': 'Video File',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='VideoComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.TimeField(blank=True, default='00:00:00', null=True)),
                ('comment', models.TextField(blank=True, default='', null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('updated', models.DateTimeField(blank=True, null=True)),
                ('deleted', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='VideoComment.creator+', to=settings.AUTH_USER_MODEL)),
                ('deleter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='VideoComment.deleter+', to=settings.AUTH_USER_MODEL)),
                ('task_video', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='videocomment_task_video', to='flow.taskvideo')),
                ('updater', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='VideoComment.updater+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Video Comment',
                'verbose_name_plural': 'Video Comment',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='UserAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.TextField(blank=True, null=True)),
                ('matrics_link', models.URLField(blank=True, null=True)),
                ('calendar_link', models.URLField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('review', models.TextField(blank=True, null=True)),
                ('review1', models.TextField(blank=True, null=True)),
                ('review2', models.TextField(blank=True, null=True)),
                ('review3', models.TextField(blank=True, null=True)),
                ('review4', models.TextField(blank=True, null=True)),
                ('review5', models.TextField(blank=True, null=True)),
                ('free', models.BooleanField(default=False)),
                ('username', models.EmailField(blank=True, max_length=254, null=True)),
                ('password', models.TextField(blank=True, null=True)),
                ('server', models.CharField(blank=True, max_length=100, null=True)),
                ('port', models.IntegerField(blank=True, null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('updated', models.DateTimeField(blank=True, null=True)),
                ('deleted', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='UserAccount.creator+', to=settings.AUTH_USER_MODEL)),
                ('deleter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='UserAccount.deleter+', to=settings.AUTH_USER_MODEL)),
                ('updater', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='UserAccount.updater+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='useraccount_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '0 User Account',
                'verbose_name_plural': '0 User Account',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='TaskHead',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('order', models.IntegerField(default=0)),
                ('active', models.BooleanField(default=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taskhead_project', to='flow.project')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='taskhead_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '6.1 Task Head',
                'verbose_name_plural': '6.1 Task Head',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='TaskFolder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('updated', models.DateTimeField(blank=True, null=True)),
                ('deleted', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='TaskFolder.creator+', to=settings.AUTH_USER_MODEL)),
                ('deleter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='TaskFolder.deleter+', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taskfolder_project', to='flow.project')),
                ('updater', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='TaskFolder.updater+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '5. Task Folder',
                'verbose_name_plural': '5. Task Folder',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='TaskComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.TimeField(blank=True, default='00:00:00', null=True)),
                ('comment', models.TextField(blank=True, default='', null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('updated', models.DateTimeField(blank=True, null=True)),
                ('deleted', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='TaskComment.creator+', to=settings.AUTH_USER_MODEL)),
                ('deleter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='TaskComment.deleter+', to=settings.AUTH_USER_MODEL)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taskcomment_task', to='flow.task')),
                ('updater', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='TaskComment.updater+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Task Comment',
                'verbose_name_plural': 'Task Comment',
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='task',
            name='folder',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='task_folder', to='flow.taskfolder'),
        ),
        migrations.AddField(
            model_name='task',
            name='project',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='task_project', to='flow.project'),
        ),
        migrations.AddField(
            model_name='task',
            name='status',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='task_status', to='flow.status'),
        ),
        migrations.AddField(
            model_name='task',
            name='updater',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Task.updater+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='StatusPreset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('updated', models.DateTimeField(blank=True, null=True)),
                ('deleted', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='statuspreset_company', to='flow.company')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='StatusPreset.creator+', to=settings.AUTH_USER_MODEL)),
                ('deleter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='StatusPreset.deleter+', to=settings.AUTH_USER_MODEL)),
                ('updater', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='StatusPreset.updater+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '7. Status Preset',
                'verbose_name_plural': '7. Status Preset',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='StatusList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('employee', models.CharField(blank=True, default='', max_length=1000, null=True)),
                ('color', models.CharField(blank=True, default='', max_length=10, null=True)),
                ('notes', models.TextField(blank=True, default='', null=True)),
                ('active', models.BooleanField(default=False)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('updated', models.DateTimeField(blank=True, null=True)),
                ('deleted', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='StatusList.creator+', to=settings.AUTH_USER_MODEL)),
                ('deleter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='StatusList.deleter+', to=settings.AUTH_USER_MODEL)),
                ('status_preset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='statuslist_statuspreset', to='flow.statuspreset')),
                ('updater', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='StatusList.updater+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '8. Status List',
                'verbose_name_plural': '8. Status List',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Sort',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(default=0)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sort_company', to='flow.company')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sort_project', to='flow.project')),
                ('project_folder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sort_project_folder', to='flow.projectfolder')),
                ('task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sort_task', to='flow.task')),
                ('task_folder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sort_task_folder', to='flow.taskfolder')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sort_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Sort',
                'verbose_name_plural': 'Sort',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Select',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tab', models.CharField(default='#tab_calendar', max_length=20)),
                ('status', models.BooleanField(default=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='select_company', to='flow.company')),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='select_employee', to='flow.employee')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='select_project', to='flow.project')),
                ('status_preset', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='select_status_preset', to='flow.statuspreset')),
                ('task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='select_task', to='flow.task')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='select_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Select',
                'verbose_name_plural': 'Select',
                'ordering': ['company'],
            },
        ),
        migrations.AddField(
            model_name='project',
            name='folder',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='project_folder', to='flow.projectfolder'),
        ),
        migrations.AddField(
            model_name='project',
            name='updater',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Project.updater+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='PaymentSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session', models.TextField()),
                ('paid', models.BooleanField(default=False)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('updated', models.DateTimeField(blank=True, null=True)),
                ('deleted', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PaymentSession.creator+', to=settings.AUTH_USER_MODEL)),
                ('deleter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PaymentSession.deleter+', to=settings.AUTH_USER_MODEL)),
                ('updater', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PaymentSession.updater+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='paymentsession_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Payment Session',
                'verbose_name_plural': 'Payment Session',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='CompanyPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateField(default=datetime.datetime.now)),
                ('end', models.DateField(default=datetime.datetime(2023, 6, 9, 22, 10, 32, 816801))),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('updated', models.DateTimeField(blank=True, null=True)),
                ('deleted', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='companypayment_company', to='flow.company')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='CompanyPayment.creator+', to=settings.AUTH_USER_MODEL)),
                ('deleter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='CompanyPayment.deleter+', to=settings.AUTH_USER_MODEL)),
                ('updater', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='CompanyPayment.updater+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='companypayment_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Company Payment',
                'verbose_name_plural': 'Company Payment',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Calendar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_on', models.DateTimeField(blank=True, null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('updated', models.DateTimeField(blank=True, null=True)),
                ('deleted', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='calendar_company', to='flow.company')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Calendar.creator+', to=settings.AUTH_USER_MODEL)),
                ('deleter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Calendar.deleter+', to=settings.AUTH_USER_MODEL)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='calendar_task', to='flow.task')),
                ('updater', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Calendar.updater+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Calendar',
                'verbose_name_plural': 'Calendar',
                'ordering': ['id'],
            },
        ),
    ]
